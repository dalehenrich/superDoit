#! /usr/bin/env bash
#
#	Expected script command line:
#		using $GS_HOME
#			script [ <script-args> ] [ -- [ <stone-name> [ <topaz-command-line-args> ] ] ]
#		using $ARCHBASE or $GEMSTONE
#			script [ <script-args> ] -- <topaz-command-line-args>
#
#	Not worried about duplicate topaz options at this point ... let the cards fall where they may
#

set -e

export SUPERDOIT_CURRENT_DIR="`pwd`"
export SUPERDOIT_DIR="`dirname $0`/.."
gemstoneDir="$SUPERDOIT_DIR/gemstone"

# process command line args
#		collect scriptFile, then scan for scriptArgs, if -- encountered, 

scriptFile=$1
shift

usingARCHBASE="false"
usingGS_HOME="false"
usingGEMSTONE="false"
if [ -f ".GDKStoneSpec.ston" ] && [ -d "product" ] ; then
	# support GsDevKit_stones
	export GEMSTONE="`pwd`/product"
	usingGEMSTONE="true"
elif [ "$GS_HOME"x != "x" ] ; then
	usingGS_HOME="true"
elif [ "$ARCHBASE"x != "x" ] ; then
	usingARCHBASE="true"
elif [ "$GEMSTONE"x != "x" ] ; then
	usingGEMSTONE="true"
else
	echo "One environment variable of ARCHBASE, GS_HOME, or GEMSTONE must be defined"
	exit 1
fi

topazArgs=()
scriptArgs=()
for arg in "$@"; do
		if [[ "$endOfScriptArgs"x = "x" ]] && [[ "$arg" = "--" ]] ; then
			endOfScriptArgs="true"
		else
			if [ "$endOfScriptArgs"x = "x" ] ; then
				scriptArgs+=("$arg")
			else
				if [ "$usingGS_HOME" = "true" ] ; then
					if [ "$stoneName"x = "x" ] ; then
						stoneName=$arg
					else
						topazArgs+=("$arg")
						defaultTopazArgs=()	# explicit empty defaultTopazArgs
					fi
				else
					topazArgs+=("$arg")
					defaultTopazArgs=()	# explicit empty defaultTopazArgs
				fi
			fi
		fi
		shift
done

if [ "$usingGS_HOME" = "true" ] ; then
	if [ "$stoneName"x = "x" ] ; then
		# expect current directory to be a stone directory
		currentDir=`pwd`
		stoneName="`basename $currentDir`"
		export SUPERDOIT_STONE_DIR=$GS_HOME/server/stones/$stoneName
		if [ ! -d "$SUPERDOIT_STONE_DIR" ] ; then
			>&2 echo "No stone name specified on the command line AND the current directory"
			>&2 echo "$SUPERDOIT_STONE_DIR is NOT a \$GS_HOME stone directory."
			>&2 echo "---"
			>&2 echo "run the script in a proper \$GS_HOME stone directory or specify the stone-name:"
			>&2 echo "  Usage: script [ <script-args> ] [ -- [ <stone-name> [ <topaz-command-line-args> ] ] ]"
			exit 1
		fi
	else
		export SUPERDOIT_STONE_DIR=$GS_HOME/server/stones/$stoneName
		if [ ! -d "$SUPERDOIT_STONE_DIR" ] ; then
			>&2 echo "The stone name $stoneName is not the name of an existing stone:"
			>&2 echo "	$SUPERDOIT_STONE_DIR is NOT a valid \$GS_HOME/server/stones stone directory."
			>&2 echo "---"
			>&2 echo "run the script in a proper \$GS_HOME stone directory or specify the stone-name:"
			>&2 echo "  Usage: script [ <script-args> ] [ -- [ <stone-name> [ <topaz-command-line-args> ] ] ]"
			exit 1
		fi
	fi
	# set up GsDevKit_home stone environment
	pushd "$SUPERDOIT_STONE_DIR" >& /dev/null
 	 source "$SUPERDOIT_STONE_DIR/stone.env"
	popd >& /dev/null

	if [ "$GEMSTONE"x = "x" ] ; then
		export GEMSTONE="$SUPERDOIT_STONE_DIR/product"
	fi

	if [ "$ROWAN_PROJECTS_HOME"x = "x" ] ; then
		export ROWAN_PROJECTS_HOME="$GS_HOME/shared/repos"
	fi
fi

skip="skip"
if [ "$skip"x = "x" ] ; then
	echo "======================"
	echo "script file: $scriptFile"
	echo "stone name: $stoneName"
	echo "topaz args: ${topazArgs[@]}"
	echo "script args: ${scriptArgs[@]}"
	echo "======================"
	# exit 0
fi

useBootstrapSuperDoit_file="true" # ... at the moment, this is the only valid value
if [ "$useBootstrapSuperDoit_file" = "true" ]; then
	# Rowan extent NOT NEEDED in stone ... bootstrap superDoit using .gs files
	vers=`awk 'NR==2{print $1; exit}' $GEMSTONE/version.txt`
	if [ ${#defaultTopazArgs[@]} -eq 0 ] ; then
		defaultTopazArgs=("-L")		# if no topaz args specified, then default to -L
	fi
	if [ "$usingGS_HOME" = "true" ] ; then
		topaziniArg=( "-I" "$SUPERDOIT_STONE_DIR/.topazini")
	else
		topaziniArg=()	# -I should be defined by user on command line
		case $vers in
			3.5.*|3.6.*|3.7.*) 
				# supported versions
				;;
			*)
				echo "using ARCHBASE and GEMSTONE env vars not supported for version ${vers}, must use 3.5.x or greater"
				exit 1
		esac
	fi
	case $vers in
		# in gemstone versions prior to 3.4.0 topaz does not support the -- command
		#		line option, so it is not possible to add custom command line options
		3.4.*) 
			export bootstrapSuperDoit_file="$gemstoneDir/bootstrap/bootstrapSuperDoit_34x.gs"
			superdoit_tpz=$gemstoneDir/superdoit_boot_1_34x.tpz
			;;
		3.5.*) 
			export bootstrapSuperDoit_file="$gemstoneDir/bootstrap/bootstrapSuperDoit_35x.gs"
			superdoit_tpz=$gemstoneDir/superdoit_boot_1_35x.tpz
			;;
		3.6.0) 
			export bootstrapSuperDoit_file="$gemstoneDir/bootstrap/bootstrapSuperDoit_360.gs"
			superdoit_tpz=$gemstoneDir/superdoit_boot_1_36x.tpz
			;;
		3.6.[1-9]) 
			export bootstrapSuperDoit_file="$gemstoneDir/bootstrap/bootstrapSuperDoit_361x.gs"
			superdoit_tpz=$gemstoneDir/superdoit_boot_1_36x.tpz
			;;
		3.7.*) 
			export bootstrapSuperDoit_file="$gemstoneDir/bootstrap/bootstrapSuperDoit_37x.gs"
			superdoit_tpz=$gemstoneDir/superdoit_boot_1_36x.tpz
			;;
		*) echo "unsupported gemstone version $vers"; exit 1 ;;
	esac
else
	# Rowan extent NEEDED in stone ... at the moment, it isn't clear how to tell when Rowan is present without starting stone
	superdoit_tpz=$gemstoneDir/superdoit.tpz
fi

if [ "$skip"x = "x" ] ; then
	echo "======================"
	echo "defaultTopazArgs args: ${defaultTopazArgs[@]}"
	echo "topaziniArg args: ${topaziniArg[@]}"
	echo "topaz args: ${topazArgs[@]}"
	echo "script args: ${scriptArgs[@]}"
	echo "======================"
	# exit 0
fi

export gemstoneDir
case $vers in
	3.5.*|3.6.*|3.7.*)
		commandLine=()
		commandLine+=("${defaultTopazArgs[@]}")
		if [ "$topazArgs"x != x ] ; then
			commandLine+=("${topazArgs[@]}")
		fi
		commandLine+=("${topaziniArg[@]}")
	 	commandLine+=("-q" "-S" "$superdoit_tpz" "--" "$scriptFile" "--" )
		commandLine+=("${scriptArgs[@]}")
		$GEMSTONE/bin/topaz "${commandLine[@]}"
#		$GEMSTONE/bin/topaz $defaultTopazArgs $topazArgs \
#			$topaziniArg \
#			-q \
#			-S $superdoit_tpz -- $scriptFile -- $scriptArgs
		;;
	*)
		if [[ $scriptArgs == *"-D"*  ||  $scriptArgs == *"--debug"* ]]; then
			ini="$gemstoneDir/topazini_debug"
			superdoit_tpz=$gemstoneDir/superdoit_boot_debug_1_34x.tpz
		else
			ini="$gemstoneDir/topazini"
			# superdoit_tpz=$gemstoneDir/superdoit_boot_2.tpz
		fi
		export superdoit_tpz
		commandLine=()
		commandLine+=("${defaultTopazArgs[@]}")
		if [ "$topazArgs"x != x ] ; then
			commandLine+=("${topazArgs[@]}")
		fi
		commandLine+=("-I" "$ini")
	 	commandLine+=("-q" "--" "$scriptFile" "--" )
		commandLine+=("${scriptArgs[@]}")
		$GEMSTONE/bin/topaz "${commandLine[@]}"
#		$GEMSTONE/bin/topaz $defaultTopazArgs $topazArgs \
#			-q -I "$ini" -- $scriptFile -- $scriptArgs
		;;
esac
