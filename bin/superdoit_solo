#! /usr/bin/env bash
#
#	Expected script command line:
#		script [ <script-args> ] [ -- <topaz-command-line-args> ]
#
#	Not worried about duplicate topaz options at this point ... let the cards fall where they may
#
# set -x 

set -e

export SUPERDOIT_DIR="`dirname $0`/.."

export gemstoneDir="$SUPERDOIT_DIR/gemstone"

scriptFile=$1
shift

topazArgs=()
scriptArgs=()
for arg in "$@"; do
		if [[ "$endOfScriptArgs"x = "x" ]] && [[ "$arg" = "--" ]] ; then
			endOfScriptArgs="true"
		else
			if [ "$endOfScriptArgs"x = "x" ] ; then
				scriptArgs+=("$arg")
			else
				topazArgs+=("$arg")
			fi
		fi
		shift
done

export TARGET_GEMSTONE=$GEMSTONE
if [ "$GEMSTONE"x != "x" ] ; then
	if [ -f "$GEMSTONE/bin/extent0.rowan.dbf" ] ; then
		GEM_SOLO_EXTENT=$GEMSTONE/bin/extent0.rowan.dbf
	else
		GEM_SOLO_EXTENT=$GEMSTONE/bin/extent0.dbf
	fi
else
	# Installation using extent0.solo.dbf from local superDoit project
	export GEMSTONE="$gemstoneDir/solo/product"
	GEM_SOLO_EXTENT="$gemstoneDir/solo/extent0.solo.dbf"
fi

skip="skip"
if [ "$skip"x = "x" ] ; then
	echo "======================"
	echo "script file: $scriptFile"
	echo "script args: ${scriptArgs[@]}"
	echo "topaz args: ${topazArgs[@]}"
	echo "======================"
	# exit 0
fi

export SUPERDOIT_GEMSTONE_VERSION=`awk 'NR==2{print $1; exit}' $GEMSTONE/version.txt`
$GEMSTONE/bin/topaz -l \
	-I "$gemstoneDir/topazini_solo" \
	-C "GEM_SOLO_EXTENT=$GEM_SOLO_EXTENT" \
	-q \
	${topazArgs[@]} \
	-S $gemstoneDir/superdoit.tpz -- $scriptFile -- ${scriptArgs[@]}
