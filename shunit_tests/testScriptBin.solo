#! /usr/bin/env bash

echo ==================
echo testScriptBin.solo
echo ==================

testSimple_solo() {
  seven=`simple.solo`
  assertEquals "wrong answer (not 7)" '7' "${seven}"
}

testError_solo() {
	# this guy is expected to return with non-zero exit code
	error.solo
	exitStatus=$?
	assertEquals "expected exit status to be <1> not <${exitStatus}>" ${exitStatus} 1
}

testVersionReport_solo() {
	#run without error
	versionReport.solo
}

test_testEnsureBlock_solo() {
	resultFile=`mktemp`
	stackFile=`mktemp`

	testEnsureBlock.solo 1> $stackFile 2> $resultFile
	exitStatus=$?
echo "============================"
cat $stackFile
echo "++++++++++++++++++++++++++++"
cat $resultFile
echo "============================"
	assertEquals "expected exit status to be <1> not <${exitStatus}>" ${exitStatus} 1
	diff $resultFile ${GITHUB_WORKSPACE}/tests/expected/${SOLO_GEMSTONE_VERSION}/testEnsureBlock.ston	
}

. shunit_tests/shunit2-2.1.8/shunit2_test_helpers
. shunit_tests/shunit2-2.1.8/shunit2

echo ==================
echo DONE testScriptBin.solo
echo ==================

